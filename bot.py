import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BOT_TOKEN = "7866911476:AAFK9gVdI_JAwCCMyzahh0kkWrtBbTxChEg"
CHANNEL_USERNAME = "@engsiderschool"

# --- –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò ---
async def check_subscription(user_id: int, app: Application) -> bool:
    try:
        chat_member = await app.bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        return chat_member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

# --- –ö–û–ú–ê–ù–î–ê /START ---
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    user_id = user.id

    is_subscribed = await check_subscription(user_id, context.application)

    if is_subscribed:
        await update.message.reply_text(
            "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –í–æ—Ç –≤–∞—à –±–æ–Ω—É—Å:\n\n"
            "üåü –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ\n"
            "–°–º–æ—Ç—Ä–∏—Ç–µ —É—Ä–æ–∫ –ø–æ —Å—Å—ã–ª–∫–µ: https://progressme.ru/sharing-material/a0a88b46-e78c-4e32-8d59-ded129ee5830\n\n"
            "–£—Å–ø–µ—Ö–æ–≤ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ! üìö"
        )
    else:
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/engsiderschool")],
            [InlineKeyboardButton("üîÅ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subscription")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n"
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n"
            "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è'.",
            reply_markup=reply_markup
        )

# --- –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò –ü–û –ö–ù–û–ü–ö–ï ---
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    is_subscribed = await check_subscription(user_id, context.application)

    if is_subscribed:
        await query.edit_message_text(
            "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –í–æ—Ç –≤–∞—à –±–æ–Ω—É—Å:\n\n"
            "üåü –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ\n"
            "–°–º–æ—Ç—Ä–∏—Ç–µ —É—Ä–æ–∫ –ø–æ —Å—Å—ã–ª–∫–µ: https://progressme.ru/sharing-material/a0a88b46-e78c-4e32-8d59-ded129ee5830\n\n"
            "–£—Å–ø–µ—Ö–æ–≤ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ! üìö"
        )
    else:
        await query.edit_message_text(
            "‚ùå –Ø –Ω–µ –≤–∏–∂—É –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –∏ –Ω–∞–∂–º–∏—Ç–µ '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è' —Å–Ω–æ–≤–∞.\n\n"
            "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: https://t.me/engsiderschool",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üîÅ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subscription")
            ]])
        )

# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
def main() -> None:
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CallbackQueryHandler(button_callback, pattern="^check_subscription$"))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    application.run_polling()

if __name__ == '__main__':
    main()